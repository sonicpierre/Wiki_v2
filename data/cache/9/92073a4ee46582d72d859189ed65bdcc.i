a:140:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:25:"Les règles d'association";i:1;i:2;i:2;i:2;}i:2;i:2;}i:2;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:2;}i:3;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2;}i:4;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:237:"Nous allons travailler avec un DataSet qui recense plusieurs tickets de caisse par pays. Nous avons un peu pré-traité le dataset pour qu'il soit directement utilisable pour la construction de règle. Vous trouverez le dataset utilisé ";}i:2;i:39;}i:5;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:121:"https://github.com/LlamasPartan/Machine_Learning_Ressource/tree/master/Exploration%20des%20donnees/Data%20ticket%20caisse";i:1;s:4:" ici";}i:2;i:276;}i:6;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" ainsi que le code qui a permi de le pré-traité.";}i:2;i:406;}i:7;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:456;}i:8;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:456;}i:9;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:26:":cpp:association_rules.png";i:1;s:21:"Règles d'association";i:2;s:6:"center";i:3;s:3:"800";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:458;}i:10;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:516;}i:11;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:516;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:222:"On va voir comment faire des règles d'association entre les éléments de tickets de caisse. Le but étant de faire ressortir les combinaisons de produits les plus courants, afin de proposer de possibles achats associés.";}i:2;i:518;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:740;}i:14;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:742;}i:15;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:42:"Forme des données et spécificité Python";i:1;i:3;i:2;i:742;}i:2;i:742;}i:16;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:742;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:742;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:160:"Il faut avant tout que les données aient une forme particulière, par exemple que chacun des produits et des tickets de caisse soient reliés par un même ID. ";}i:2;i:794;}i:19;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:955;}i:20;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:3;i:1;i:4;i:2;i:956;}i:2;i:955;}i:21;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:955;}i:22;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:955;}i:23;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:955;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:"              ";}i:2;i:957;}i:25;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:971;}i:26;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:971;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" ID Ticket    ";}i:2;i:972;}i:28;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:986;}i:29;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:986;}i:30;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" Produit    ";}i:2;i:987;}i:31;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:999;}i:32;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:1000;}i:33;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:1000;}i:34;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:1000;}i:35;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1000;}i:36;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 1      ";}i:2;i:1002;}i:37;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:1010;}i:38;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1010;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 1            ";}i:2;i:1011;}i:40;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:1025;}i:41;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1025;}i:42;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" Pêche            ";}i:2;i:1026;}i:43;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:1045;}i:44;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:1046;}i:45;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:1046;}i:46;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1046;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 2      ";}i:2;i:1048;}i:48;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:1056;}i:49;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1056;}i:50;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 1            ";}i:2;i:1057;}i:51;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:1071;}i:52;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1071;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" Prune            ";}i:2;i:1072;}i:54;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:1090;}i:55;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:1091;}i:56;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:1091;}i:57;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1091;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" 3      ";}i:2;i:1093;}i:59;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:1101;}i:60;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1101;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" 2            ";}i:2;i:1102;}i:62;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:1116;}i:63;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:1116;}i:64;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" Abricot          ";}i:2;i:1117;}i:65;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:1135;}i:66;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:1136;}i:67;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:1136;}i:2;i:1136;}i:68;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1136;}i:69;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:149:"Ensuite il est nécessaire de rendre le dataset binaire. Il y aura des 0 quand le produit n'est pas présent dans le ticket et 1 s’il est présent.";}i:2;i:1138;}i:70;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1287;}i:71;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:178:"
import pandas as pd
dodo = pd.read_csv(("produit.csv"))
#tableau croisé 0/1
DataFrame = pd.crosstab(dodo.NumTicket,dodo.Produit)
DataFrame.columns #Permet d'avoir les colonnes
";i:1;s:6:"python";i:2;N;}i:2;i:1294;}i:72;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1294;}i:73;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:"On peut appliquer l'algorithme qui calcule à chaque fois le support et élimine les combinaisons dont le support est trop bas.";}i:2;i:1489;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1616;}i:75;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:216:"
#importation de la fonction apriori
from mlxtend.frequent_patterns import apriori
 
#itemsets frequents
freq_itemsets = apriori(DataFrame,min_support=0.025,max_len=3, use_colnames=True)
freq_itemsets.iloc[60:80, :]
";i:1;s:6:"python";i:2;N;}i:2;i:1623;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1623;}i:77;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1856;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Résultat :";}i:2;i:1858;}i:79;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1869;}i:80;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1871;}i:81;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1871;}i:82;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:28:":cpp:resultatassociation.png";i:1;s:0:"";i:2;s:6:"center";i:3;s:3:"250";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:1873;}i:83;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1912;}i:84;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1912;}i:85;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1914;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Remarque :";}i:2;i:1916;}i:87;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1926;}i:88;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1928;}i:89;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1928;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:220:"Parfois, on obtient trop de règles et elles ne sont pas exploitables c'est pourquoi il peut être intéressant de faire ressortir certaines règles. Pour cela, il existe une librairie particulière utilisée en Python :";}i:2;i:1931;}i:91;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2151;}i:92;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:231:"
#fonction de calcul des règles
from mlxtend.frequent_patterns import association_rules

#génération des règles à partir des itemsets fréquents
regles = association_rules(freq_itemsets,metric="confidence",min_threshold=0.75)
";i:1;s:6:"python";i:2;N;}i:2;i:2158;}i:93;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2405;}i:94;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:40:"Forme des données et spécificité en R";i:1;i:3;i:2;i:2405;}i:2;i:2405;}i:95;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2405;}i:96;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2405;}i:97;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:158:"En R, il est possible de trouver les règles sur le dataFrame brut. Commençon par charger les données et les librairies qui vont nous permettre de le faire.";}i:2;i:2455;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2613;}i:99;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:89:"
library(arules)
library(arulesViz)
data = read.csv("produitPourR.csv")
data = data[,-1]
";i:1;s:6:"python";i:2;N;}i:2;i:2620;}i:100;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2620;}i:101;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:98:"On peut ensuite lancer l'algorithme et contrairement à Python visualiser les règles construites.";}i:2;i:2726;}i:102;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2824;}i:103;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:173:"
rules = apriori(data, parameter = list(support=0.01, confidence=0.5, minlen=2))
inspect(sort(rules,by="confidence"))
plot (rules[1:19],method="graph",shading="confidence")
";i:1;s:6:"python";i:2;N;}i:2;i:2831;}i:104;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2831;}i:105;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3021;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Résultat :";}i:2;i:3023;}i:107;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3034;}i:108;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3036;}i:109;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3036;}i:110;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:24:":cpp:association.png.png";i:1;s:0:"";i:2;s:6:"center";i:3;s:3:"700";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:3038;}i:111;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3073;}i:112;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3073;}i:113;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:3076;}i:114;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Source :";}i:2;i:3078;}i:115;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:3086;}i:116;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:3088;}i:117;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3089;}i:118;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:3089;}i:119;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3089;}i:120;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3089;}i:121;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3093;}i:122;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:89:"http://eric.univ-lyon2.fr/~ricco/tanagra/fichiers/fr_Tanagra_Python_Association_Rules.pdf";i:1;N;}i:2;i:3094;}i:123;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3187;}i:124;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3187;}i:125;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3187;}i:126;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3187;}i:127;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3191;}i:128;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:68:"http://eric.univ-lyon2.fr/~ricco/cours/slides/regles_association.pdf";i:1;N;}i:2;i:3192;}i:129;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3264;}i:130;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3264;}i:131;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:3264;}i:132;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:3264;}i:133;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3268;}i:134;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:96:"https://freres.peyronnet.eu/trouver-la-bonne-association-a-laide-du-data-miningmachine-learning/";i:1;N;}i:2;i:3269;}i:135;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:3369;}i:136;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:3369;}i:137;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:3369;}i:138;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3369;}i:139;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:3369;}}