a:485:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:12:"internallink";i:1;a:2:{i:0;s:6:"cpp:IA";i:1;s:17:" Machine Learning";}i:2;i:1;}i:3;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:29;}i:4;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:21:":cpp:donneesrecup.jpg";i:1;s:0:"";i:2;N;i:3;s:3:"500";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:30;}i:5;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:60;}i:6;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:60;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:210:"Il est bon de rappeler qu'il est inutile de construire un modèle de Machine Learning s’il n'est pas entrainé avec des données de bonne qualité. Il faut donc savoir comment et où récupérer les données.";}i:2;i:62;}i:8;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:272;}i:9;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:47:"Récupération classique de données ordonnées";i:1;i:2;i:2;i:275;}i:2;i:275;}i:10;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:275;}i:11;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:275;}i:12;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:257:"Dans cette partie, nous supposerons que les données sont organisées et nous verrons  comment les récupérer pour les traiter. Il faut bien prendre en compte que la récupération des données constitue une étape capitale pour la suite de notre travail. ";}i:2;i:334;}i:13;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:591;}i:14;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:593;}i:15;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:28:"Lecture classique de fichier";i:1;i:3;i:2;i:593;}i:2;i:593;}i:16;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:593;}i:17;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:593;}i:18;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"Il est parfois nécessaire de ne pas passer par un ";}i:2;i:631;}i:19;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"URL";}i:2;i:682;}i:20;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:209:" pour récupérer les données mais plutôt par un fichier sauvegardé localement. Il est alors indispensable de le lire en ayant connaissance du type de fichier pour avoir un dataFrame correctement découpé.";}i:2;i:685;}i:21;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:894;}i:22;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:894;}i:23;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:896;}i:24;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Rappel :";}i:2;i:898;}i:25;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:906;}i:26;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:908;}i:27;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:908;}i:28;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:223:"Un dataFrame est un objet qui se différencie d'une liste à 2 dimensions. En effet, il utilise des séries qui diffèrent des listes car elles sont indexées ce qui sera pratique pour sélectionner et traiter les données.";}i:2;i:910;}i:29;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1133;}i:30;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1133;}i:31;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:1135;}i:32;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:1137;}i:33;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:1148;}i:34;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1150;}i:35;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:68:"
import pandas as pd
dataFrame = pd.read_csv("donnee.csv", sep=";")
";i:1;s:6:"python";i:2;N;}i:2;i:1157;}i:36;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1157;}i:37;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:1242;}i:38;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:1244;}i:39;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:1250;}i:40;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1252;}i:41;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:58:"
dataFrame = read.csv("donnee.csv", sep = ";", header=T);
";i:1;s:6:"python";i:2;N;}i:2;i:1259;}i:42;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1259;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:141:"Maintenant que votre dataFrame est chargé dans une variable vous pouvez le manipuler, le nettoyer et, par la suite, élaborer votre modèle.";}i:2;i:1334;}i:44;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1475;}i:45;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1475;}i:46;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"alertbox";i:1;a:2:{i:0;i:1;i:1;s:10:"alert-info";}i:2;i:1;i:3;s:12:"<alert info>";}i:2;i:1477;}i:47;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:1489;}i:48;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Remarque :";}i:2;i:1491;}i:49;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:1501;}i:50;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"alertbox";i:1;a:2:{i:0;i:3;i:1;s:90:" il suffira de changer la méthode associée au read pour lire d'autres types de fichiers.";}i:2;i:3;i:3;s:90:" il suffira de changer la méthode associée au read pour lire d'autres types de fichiers.";}i:2;i:1503;}i:51;a:3:{i:0;s:6:"plugin";i:1;a:4:{i:0;s:8:"alertbox";i:1;a:2:{i:0;i:4;i:1;s:0:"";}i:2;i:4;i:3;s:8:"</alert>";}i:2;i:1593;}i:52;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1601;}i:53;a:3:{i:0;s:2:"hr";i:1;a:0:{}i:2;i:1601;}i:54;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:1608;}i:55;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:22:"Regrouper les fichiers";i:1;i:2;i:2;i:1608;}i:2;i:1608;}i:56;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:1608;}i:57;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1608;}i:58;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:164:"Les fichiers contenant les données se trouvent rarement dans un seul dossier mais découpés dans une multitude de fichiers rangés dans un dossier (par date, type";}i:2;i:1642;}i:59;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1806;}i:60;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:").  Pour développer ce point, nous allons utiliser les données présentes ";}i:2;i:1809;}i:61;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:132:"https://github.com/LlamasPartan/Ressource-Wiki/tree/master/Intelligence%20Artificielle/Machine%20Learning/Constituer%20son%20Dataset";i:1;s:4:" ici";}i:2;i:1885;}i:62;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:". Il s'agit de données sur le Covid aux USA qui ont été recensées pour mieux appréhender la maladie.";}i:2;i:2026;}i:63;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2132;}i:64;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2132;}i:65;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:32:"Recenser le contenu d'un dossier";i:1;i:3;i:2;i:2132;}i:2;i:2132;}i:66;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2132;}i:67;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2132;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:122:"Avant de regrouper les données, il faut savoir lesquelles sont présentes dans le dossier afin de pouvoir les rassembler.";}i:2;i:2174;}i:69;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2296;}i:70;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2296;}i:71;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:2298;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:2300;}i:73;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:2311;}i:74;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2313;}i:75;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:66:"
import os
listeFichier = os.listdir('Regrouper donnees Covid/*')
";i:1;s:6:"python";i:2;N;}i:2;i:2320;}i:76;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2320;}i:77;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:2403;}i:78;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:2405;}i:79;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:2411;}i:80;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2413;}i:81;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:74:"
listeFichier <- list.files("Regrouper donnees Covid", full.names = TRUE)
";i:1;s:6:"python";i:2;N;}i:2;i:2420;}i:82;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:2511;}i:83;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:37:"Regrouper des fichiers de même forme";i:1;i:3;i:2;i:2511;}i:2;i:2511;}i:84;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:2511;}i:85;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2511;}i:86;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:216:"Il faut ensuite regrouper les fichiers en un seul fichier synthétique. Pour cela, on va créer un dataFrame par fichier puis les regrouper afin d'obtenir un seul dataFrame complet sur lequel entrainer notre modèle.";}i:2;i:2558;}i:87;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2774;}i:88;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2774;}i:89;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:2776;}i:90;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:2778;}i:91;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:2789;}i:92;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2791;}i:93;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:154:"
dataFrameFinal = pd.read_csv(listeFichier[0])
for i in range(1,len(listeFichier)):
    dataFrameFinal.merge(pd.read_csv(listeFichier[i]), how = 'inner')
";i:1;s:6:"python";i:2;N;}i:2;i:2798;}i:94;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2798;}i:95;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:2969;}i:96;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:2971;}i:97;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:2977;}i:98;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2979;}i:99;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:157:"
library("dplyr")
dataFrame = read.csv(listeFichier[1])
for (i in 2:length(listeFichier)){
    dataFrame = bind_rows(dataFrame, read.csv(listeFichier[i]))
}
";i:1;s:6:"python";i:2;N;}i:2;i:2986;}i:100;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:3160;}i:101;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:45:"Regrouper les données partageant un même ID";i:1;i:3;i:2;i:3160;}i:2;i:3160;}i:102;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:3160;}i:103;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3160;}i:104;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:112:"Nous allons maintenant assembler des données qui sont liées par un ID. Vous trouverez les données utilisées ";}i:2;i:3215;}i:105;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:124:"https://github.com/LlamasPartan/Machine_Learning_Ressource/tree/master/Constituer%20son%20Dataset/Regrouper%20donnees%20LEGO";i:1;s:4:" ici";}i:2;i:3327;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:3460;}i:107;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3461;}i:108;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3461;}i:109;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:24:":cpp:repartitionlego.png";i:1;s:0:"";i:2;s:6:"center";i:3;s:3:"800";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:3463;}i:110;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3498;}i:111;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3498;}i:112;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"Essayons de rassembler tous les fichiers dans un seul un même document.";}i:2;i:3500;}i:113;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3572;}i:114;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3572;}i:115;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:3574;}i:116;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:3576;}i:117;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:3587;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3589;}i:119;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:411:"
#On charge les fichiers
inventory_sets = pd.read_csv('inventory_sets.csv')
sets = pd.read_csv('sets.csv')
themes = pd.read_csv("themes.csv")
#On rassemble les fichiers qui ont une collonne en commun 
dataInter = pd.merge(inventory_sets, sets, on=["set_num"])
#On rassemble les fichiers sur des colonnes qui n'ont pas le même nom
dataFinale = pd.merge(dataInter, themes, left_on=["theme_id"], right_on=["id"])
";i:1;s:6:"python";i:2;N;}i:2;i:3596;}i:120;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3596;}i:121;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:4024;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:4026;}i:123;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:4032;}i:124;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4034;}i:125;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:251:"
inventory_sets <- read.csv("inventory_sets.csv")
sets <- read.csv('sets.csv')
themes <- read_csv("themes.csv")
dataInter <- data %>%
    inner_join(sets, by = c("set_num"))
dataFinal <- dataInter %>%
    inner_join(themes, by = c("theme_id" = "id"))
";i:1;s:6:"python";i:2;N;}i:2;i:4041;}i:126;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4041;}i:127;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4309;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"Résultat :";}i:2;i:4311;}i:129;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4322;}i:130;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4324;}i:131;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4324;}i:132;a:3:{i:0;s:13:"internalmedia";i:1;a:7:{i:0;s:24:":cpp:datasetregroupe.png";i:1;s:0:"";i:2;s:6:"center";i:3;s:3:"800";i:4;N;i:5;s:5:"cache";i:6;s:7:"details";}i:2;i:4326;}i:133;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4361;}i:134;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4361;}i:135;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4363;}i:136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Source :";}i:2;i:4365;}i:137;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:4373;}i:138;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4375;}i:139;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:4375;}i:140;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4375;}i:141;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4375;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4379;}i:143;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:34:"https://rebrickable.com/downloads/";i:1;N;}i:2;i:4380;}i:144;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4418;}i:145;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4418;}i:146;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:4418;}i:147;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:4418;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4422;}i:149;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:59:"https://campus.datacamp.com/courses/joining-data-with-dplyr";i:1;N;}i:2;i:4423;}i:150;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:4486;}i:151;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:4486;}i:152;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:4486;}i:153;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4487;}i:154;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:41:"Constituer le dataset à partir d'une BDD";i:1;i:2;i:2;i:4487;}i:2;i:4487;}i:155;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:2;}i:2;i:4487;}i:156;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4487;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:227:"Bien souvent, les données sont rangées dans une BDD pour des questions d'ordre et de clarté c'est pourquoi il est nécessaire de savoir se connecter et faire des opérations sur celle-ci pour créer, lire et modifier sa BDD.";}i:2;i:4540;}i:158;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4767;}i:159;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:4770;}i:160;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:17:"A partir de MySQL";i:1;i:3;i:2;i:4770;}i:2;i:4770;}i:161;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:4770;}i:162;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4770;}i:163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:178:"Ici, on partira du principe que la base de données est hébergée sur votre ordinateur en local et que vous avez un login et un password. De même, nous partons du principe que ";}i:2;i:4797;}i:164;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:4975;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:"vous connaissez la façon de faire les requêtes";}i:2;i:4977;}i:166;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:5025;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:48:". Il faut tout d'abord effectuer une connexion :";}i:2;i:5027;}i:168;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5075;}i:169;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5075;}i:170;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:5077;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:5079;}i:172;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:5090;}i:173;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5092;}i:174;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:583:"
import pymysql.cursors  
 
# Connectez- vous à la base de données.
connection = pymysql.connect(host='localhost', #Endroit d'hébergement
                             user='pivirgaux', #Nom d'utilisateur
                             password='pivirgaux', #Mot de Passe                             
                             db='France', #Nom de la base de donnée
                             charset='utf8mb4', #Encodage
                             cursorclass=pymysql.cursors.DictCursor) #Lecteur qui nous permettra d'exécuter la requète
print ("Connection effective !!")
";i:1;s:6:"python";i:2;N;}i:2;i:5099;}i:175;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5099;}i:176;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:111:"Si vous êtes sous Window et que vous avez du mal avec l'installation de MySQL je vous invite à aller voir ce ";}i:2;i:5699;}i:177;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:66:"https://techexpert.tips/fr/windows-fr/installer-mysql-sur-windows/";i:1;s:5:" tuto";}i:2;i:5810;}i:178;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:5886;}i:179;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5887;}i:180;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5887;}i:181;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:5889;}i:182;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:5891;}i:183;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:5897;}i:184;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5899;}i:185;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:352:"
# load the package
library('RMySQL')
library('DBI') #Sinon vous risquez d'avoir l'erreur Plugin caching_sha2_password could not be loaded

# create a MySQL connection object
con <- dbConnect(MySQL(),
                 user = 'pivirgaux',
                 password = 'pivirgaux',
                 host = 'localhost',
                 dbname = 'France')
";i:1;s:6:"python";i:2;N;}i:2;i:5906;}i:186;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:5906;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:151:"Maintenant, voyons comment faire une requête, il est nécessaire de gérer toutes les possibilités d'erreur c'est pourquoi on fait un try en Python :";}i:2;i:6275;}i:188;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6426;}i:189;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6426;}i:190;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:6428;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:6430;}i:192;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:6441;}i:193;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6443;}i:194;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:282:"
try:
    #On commence par récupérer le curseur pour pouvoir l'utiliser
    with connection.cursor() as cursor:
       
        # On prépare notre requète
        sql = "SELECT * from Region"
        
        # Exécutez la requête (Execute Query).
        cursor.execute(sql)
";i:1;s:6:"python";i:2;N;}i:2;i:6450;}i:195;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6450;}i:196;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:6749;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:6751;}i:198;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:6757;}i:199;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:6759;}i:200;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:56:"
region = dbReadTable(con, "Region")
data.frame(region)
";i:1;s:6:"python";i:2;N;}i:2;i:6766;}i:201;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:6766;}i:202;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:6839;}i:203;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:"Attaque par injection de BDD :";}i:2;i:6841;}i:204;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:6871;}i:205;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:324:"
si on fait rentrer des données à l'utilisateur, il est bon de se rappeler qu'il n'est pas forcément bien intentionné. Il pourrait, par exemple, rentrer du SQL dans le champ éditable que vous lui proposez. Il pourrait accéder à des données ou, tout simplement, supprimer toute votre BDD c'est pourquoi il est bon de ";}i:2;i:6873;}i:206;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:7197;}i:207;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:23:"préparer ses requêtes";}i:2;i:7198;}i:208;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:7221;}i:209;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:7222;}i:210;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7223;}i:211;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7223;}i:212;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:73:"Donnons un exemple de requête qui demande une entrée à l'utilisateur :";}i:2;i:7225;}i:213;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7298;}i:214;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:201:"
 cursor = connection.cursor()    
 sql = "Delete from Region where nom = %s"
    
 # Exécutez sql et passez un paramètre
 rowCount = cursor.execute(sql, ( "Guadeloupe" ) )    
 connection.commit() 
";i:1;s:6:"python";i:2;N;}i:2;i:7305;}i:215;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7305;}i:216;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:115:" Une fois la requête exécutée, on récupère les colonnes voulues dans un DataFrame pour pouvoir les manipuler :";}i:2;i:7523;}i:217;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7638;}i:218;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7638;}i:219;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:7640;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:7642;}i:221;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:7653;}i:222;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:7655;}i:223;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:349:"
#On crée les listes qui contiendront les différents attributs
listeNom = []
listeDeSlug = []
#On passe les différentes lignes venant de notre requète
for row in cursor:
     listeNom.append(row.get('nom'))
     listeDeSlug.append(row.get('slug'))
     #On construit le dataFrame
df = pd.DataFrame({"Région" : listeNom, "Slug" : listeDeSlug})
 ";i:1;s:6:"python";i:2;N;}i:2;i:7662;}i:224;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:7662;}i:225;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:8028;}i:226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:8030;}i:227;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:8036;}i:228;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8038;}i:229;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:128:"
res <- dbSendQuery(con, "Select nom FROM Region")
data <- dbFetch(res, n=3) #n donne le nombre de données on veut récupérer
";i:1;s:6:"python";i:2;N;}i:2;i:8045;}i:230;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8045;}i:231;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:133:" Enfin, on referme la connexion, pour éviter (s’il y a trop de connexions en même temps) que le serveur soit sujet à la latence.";}i:2;i:8190;}i:232;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8323;}i:233;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8323;}i:234;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:8325;}i:235;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"En Python :";}i:2;i:8327;}i:236;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:8338;}i:237;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8340;}i:238;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:36:"   
finally:
    connection.close()
";i:1;s:6:"python";i:2;N;}i:2;i:8347;}i:239;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8347;}i:240;a:3:{i:0;s:14:"underline_open";i:1;a:0:{}i:2;i:8400;}i:241;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"En R :";}i:2;i:8402;}i:242;a:3:{i:0;s:15:"underline_close";i:1;a:0:{}i:2;i:8408;}i:243;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8410;}i:244;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:22:"   
dbDisconnect(con)
";i:1;s:6:"python";i:2;N;}i:2;i:8417;}i:245;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:8417;}i:246;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:8456;}i:247;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Remarque :";}i:2;i:8458;}i:248;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:8468;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:256:"
il est nécessaire de garder en tête qu'il s'agira du même principe avec différentes BDD. Il faudra juste changer le connecteur et adapter la requête si elle n'est pas en SQL mais en NoSQL. Voici quelques connecteurs qui pourraient vous être utiles :";}i:2;i:8470;}i:250;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:8727;}i:251;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:5;i:1;i:5;i:2;i:8728;}i:2;i:8727;}i:252;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:8727;}i:253;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:8727;}i:254;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8727;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" Base de donnée ";}i:2;i:8729;}i:256;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:8746;}i:257;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:8746;}i:258;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:" Connecteur    Python    ";}i:2;i:8747;}i:259;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:8772;}i:260;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8772;}i:261;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" Connecteur R ";}i:2;i:8773;}i:262;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:8787;}i:263;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8787;}i:264;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" Avantages ";}i:2;i:8788;}i:265;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:8799;}i:266;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:8799;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" Inconvénients   ";}i:2;i:8800;}i:268;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:8818;}i:269;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:8819;}i:270;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:8819;}i:271;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:8819;}i:272;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8819;}i:273;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" MySQL ";}i:2;i:8821;}i:274;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:8828;}i:275;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8828;}i:276;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" pymysql ";}i:2;i:8829;}i:277;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:8838;}i:278;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8838;}i:279;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" RMySQL ";}i:2;i:8839;}i:280;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:8847;}i:281;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8847;}i:282;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:"Il est multiplateforme, il est natif dans la majorité des Framework web. ";}i:2;i:8848;}i:283;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:8922;}i:284;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8922;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:" A du mal à gérer des grosses masses de données ";}i:2;i:8923;}i:286;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:8974;}i:287;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:8975;}i:288;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:8975;}i:289;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8975;}i:290;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:12:" Postgresql ";}i:2;i:8977;}i:291;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:8989;}i:292;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:8989;}i:293;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" py-postgresql ";}i:2;i:8990;}i:294;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9005;}i:295;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9005;}i:296;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" RPostgres ";}i:2;i:9006;}i:297;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9017;}i:298;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9017;}i:299;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:63:"Son mode de licence, son comportement très stable est reconnu ";}i:2;i:9018;}i:300;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9081;}i:301;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:9081;}i:302;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" Son déploiement.  ";}i:2;i:9082;}i:303;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9102;}i:304;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:9103;}i:305;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:9103;}i:306;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:9103;}i:307;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" mariadb                ";}i:2;i:9105;}i:308;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9129;}i:309;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9129;}i:310;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" mariadb ";}i:2;i:9130;}i:311;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9139;}i:312;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9139;}i:313;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:"RMariaDB ";}i:2;i:9140;}i:314;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9149;}i:315;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9149;}i:316;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:" Capacité à stocker dans une même table des types de données différents (Clés/Valeur) ";}i:2;i:9150;}i:317;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9242;}i:318;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9242;}i:319;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:84:" A tendance à devenir très volumineux rapidement ce qui ralentit les performances ";}i:2;i:9243;}i:320;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9327;}i:321;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:9328;}i:322;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:9328;}i:323;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:9328;}i:324;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" Oracle Database              ";}i:2;i:9330;}i:325;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9360;}i:326;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9360;}i:327;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" cx_Oracle ";}i:2;i:9361;}i:328;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9372;}i:329;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9372;}i:330;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" ROracle ";}i:2;i:9373;}i:331;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9382;}i:332;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:9382;}i:333;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:" Ce moteur est capable de supporter un grand nombre de bases de données par instance ";}i:2;i:9383;}i:334;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9469;}i:335;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:9469;}i:336;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:69:" Le coût des licences. Il est un grand consommateur de ressources.  ";}i:2;i:9470;}i:337;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:9539;}i:338;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:9540;}i:339;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:9540;}i:2;i:9540;}i:340;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9540;}i:341;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:9542;}i:342;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Source :";}i:2;i:9544;}i:343;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:9552;}i:344;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:9554;}i:345;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:9555;}i:346;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:9555;}i:347;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9555;}i:348;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9555;}i:349;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9559;}i:350;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:98:"https://www.218labs.ma/comparaison-de-3-bases-de-donnees-open-source-postgresql-mariadb-et-sqlite/";i:1;N;}i:2;i:9560;}i:351;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9662;}i:352;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9662;}i:353;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9662;}i:354;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9662;}i:355;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9666;}i:356;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:82:"http://www.open-source-guide.com/Actualites/Mariadb-10-les-nouveautes-et-avantages";i:1;N;}i:2;i:9667;}i:357;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9753;}i:358;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9753;}i:359;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9753;}i:360;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9753;}i:361;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9757;}i:362;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:62:"https://www.editions-ellipses.fr/PDF/9782340016620_extrait.pdf";i:1;N;}i:2;i:9758;}i:363;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9824;}i:364;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9824;}i:365;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:9824;}i:366;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:9824;}i:367;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:9828;}i:368;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:59:"https://gist.github.com/aravindhebbali/f2cc73794e9f9bfaa673";i:1;N;}i:2;i:9829;}i:369;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:9892;}i:370;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:9892;}i:371;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:9892;}i:372;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:9893;}i:373;a:3:{i:0;s:6:"header";i:1;a:3:{i:0;s:20:"À partir de MongoDB";i:1;i:3;i:2;i:9893;}i:2;i:9893;}i:374;a:3:{i:0;s:12:"section_open";i:1;a:1:{i:0;i:3;}i:2;i:9893;}i:375;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:9893;}i:376;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:86:"Si vous ne connaissez pas du tout le principe du NoSQL,  je vous propose d'aller voir ";}i:2;i:9923;}i:377;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:82:"https://openclassrooms.com/fr/courses/4462426-maitrisez-les-bases-de-donnees-nosql";i:1;s:4:" ici";}i:2;i:10009;}i:378;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:199:". Parfois, le nombre de données est très important et les BDD utilisant le NoSQL sont plus efficaces. Ici, nous allons essayer de voir comment se connecter à ce type de BDD et interagir avec elle.";}i:2;i:10101;}i:379;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10300;}i:380;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10300;}i:381;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"Comme pour les bases de données SQL, on commence par établir un lien :";}i:2;i:10302;}i:382;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10374;}i:383;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:83:"
from pymongo import MongoClient
client = MongoClient()
db = client['my_database']
";i:1;s:6:"python";i:2;N;}i:2;i:10381;}i:384;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10381;}i:385;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:"Ensuite, il faut préparer l'élément qui sera inséré dans le futur :";}i:2;i:10481;}i:386;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10553;}i:387;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:76:"
post = {"username": "Martin",
             "password": "OnPasseParPython"}
";i:1;s:6:"python";i:2;N;}i:2;i:10560;}i:388;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10560;}i:389;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:95:"Une fois la collection créée, il faut l'insérer dans la bonne table de la base de données :";}i:2;i:10653;}i:390;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:10748;}i:391;a:3:{i:0;s:4:"code";i:1;a:3:{i:0;s:187:"
#On indique clairement la table dans laquelle on veut insérer la base de donnée
posts = db.posts
#On insert la collection dans cette table
post_id = posts.insert_one(post).inserted_id
";i:1;s:6:"python";i:2;N;}i:2;i:10755;}i:392;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:10755;}i:393;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:10959;}i:394;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"Remarque :";}i:2;i:10961;}i:395;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:10971;}i:396;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:118:" on peut observer que les collections dans une BDD NoSQL sont similaires à des objets et leur accès y est identique.";}i:2;i:10973;}i:397;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11091;}i:398;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11091;}i:399;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:"Il existe d'autres BDDs utilisant le NoSQL, nous allons en citer quelques-unes.";}i:2;i:11093;}i:400;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11173;}i:401;a:3:{i:0;s:10:"table_open";i:1;a:3:{i:0;i:4;i:1;i:4;i:2;i:11174;}i:2;i:11173;}i:402;a:3:{i:0;s:15:"tablethead_open";i:1;a:0:{}i:2;i:11173;}i:403;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11173;}i:404;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11173;}i:405;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" Base de donnée ";}i:2;i:11175;}i:406;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:11192;}i:407;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:4:"left";i:2;i:1;}i:2;i:11192;}i:408;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" Connecteur   Python    ";}i:2;i:11193;}i:409;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:11217;}i:410;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:11217;}i:411;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:32:"      Avantage                  ";}i:2;i:11218;}i:412;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:11250;}i:413;a:3:{i:0;s:16:"tableheader_open";i:1;a:3:{i:0;i:1;i:1;s:6:"center";i:2;i:1;}i:2;i:11250;}i:414;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:33:"  Inconvénient                  ";}i:2;i:11251;}i:415;a:3:{i:0;s:17:"tableheader_close";i:1;a:0:{}i:2;i:11284;}i:416;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:11285;}i:417;a:3:{i:0;s:16:"tablethead_close";i:1;a:0:{}i:2;i:11285;}i:418;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11285;}i:419;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11285;}i:420;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" MongoDB ";}i:2;i:11287;}i:421;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11296;}i:422;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11296;}i:423;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:9:" pymongo ";}i:2;i:11297;}i:424;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11306;}i:425;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11306;}i:426;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:76:" L'installation est facile. La BDD  permet la conversion en JSon rapidement ";}i:2;i:11307;}i:427;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11383;}i:428;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11383;}i:429;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:79:" La BDD ne supporte pas les jointures . La taille des données est importante. ";}i:2;i:11384;}i:430;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11463;}i:431;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:11464;}i:432;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11464;}i:433;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11464;}i:434;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:" Cassandra ";}i:2;i:11466;}i:435;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11477;}i:436;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11477;}i:437;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:" cassandra-driver ";}i:2;i:11478;}i:438;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11496;}i:439;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11496;}i:440;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:75:" La BDD évolue régulièrement et n'a aucun point de défaillance unique. ";}i:2;i:11497;}i:441;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11572;}i:442;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11572;}i:443;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:94:" Les performances restent imprévisibles et elle ne prend pas en compte les requêtes ad hoc. ";}i:2;i:11573;}i:444;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11667;}i:445;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:11668;}i:446;a:3:{i:0;s:13:"tablerow_open";i:1;a:0:{}i:2;i:11668;}i:447;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11668;}i:448;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:" HBase ";}i:2;i:11670;}i:449;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11677;}i:450;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11677;}i:451;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" hbase-python ";}i:2;i:11678;}i:452;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11692;}i:453;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11692;}i:454;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:80:" Donne des résultats de recherche rapides sur des grandes tables, contient une ";}i:2;i:11693;}i:455;a:3:{i:0;s:7:"acronym";i:1;a:1:{i:0;s:3:"API";}i:2;i:11773;}i:456;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:30:" Java facilement manipulable. ";}i:2;i:11776;}i:457;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11806;}i:458;a:3:{i:0;s:14:"tablecell_open";i:1;a:3:{i:0;i:1;i:1;N;i:2;i:1;}i:2;i:11806;}i:459;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:89:" Il n'y a pas de permission d'authentification intégrée, la BDD ne supporte pas le SQL ";}i:2;i:11807;}i:460;a:3:{i:0;s:15:"tablecell_close";i:1;a:0:{}i:2;i:11896;}i:461;a:3:{i:0;s:14:"tablerow_close";i:1;a:0:{}i:2;i:11897;}i:462;a:3:{i:0;s:11:"table_close";i:1;a:1:{i:0;i:11897;}i:2;i:11897;}i:463;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:11897;}i:464;a:3:{i:0;s:11:"strong_open";i:1;a:0:{}i:2;i:11899;}i:465;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"Source :";}i:2;i:11901;}i:466;a:3:{i:0;s:12:"strong_close";i:1;a:0:{}i:2;i:11909;}i:467;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:11911;}i:468;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:11912;}i:469;a:3:{i:0;s:10:"listu_open";i:1;a:0:{}i:2;i:11912;}i:470;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:11912;}i:471;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:11912;}i:472;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:11916;}i:473;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:54:"https://pymongo.readthedocs.io/en/stable/tutorial.html";i:1;N;}i:2;i:11917;}i:474;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:11975;}i:475;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:11975;}i:476;a:3:{i:0;s:13:"listitem_open";i:1;a:1:{i:0;i:1;}i:2;i:11975;}i:477;a:3:{i:0;s:16:"listcontent_open";i:1;a:0:{}i:2;i:11975;}i:478;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:11979;}i:479;a:3:{i:0;s:12:"externallink";i:1;a:2:{i:0;s:56:"https://www.ambient-it.net/top-meilleures-db-nosql-2019/";i:1;N;}i:2;i:11980;}i:480;a:3:{i:0;s:17:"listcontent_close";i:1;a:0:{}i:2;i:12040;}i:481;a:3:{i:0;s:14:"listitem_close";i:1;a:0:{}i:2;i:12040;}i:482;a:3:{i:0;s:11:"listu_close";i:1;a:0:{}i:2;i:12040;}i:483;a:3:{i:0;s:13:"section_close";i:1;a:0:{}i:2;i:12045;}i:484;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:12045;}}